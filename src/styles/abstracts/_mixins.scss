// src/styles/abstracts/_mixins.scss
// VERSÃO ATUALIZADA BASEADA NO HTML DE REFERÊNCIA
@use 'sass:map';
@use 'variables' as v;

// ===================================
// MIXINS ESSENCIAIS
// ===================================
@mixin smooth-transition($duration: 0.3s) {
  transition: all $duration ease;
}

@mixin cubic-transition($duration: 0.3s) {
  transition: all $duration cubic-bezier(0.4, 0, 0.2, 1);
}

@mixin backdrop-blur($blur: 10px) {
  backdrop-filter: blur($blur);
  -webkit-backdrop-filter: blur($blur);
}

// ===================================
// MIXINS RESPONSIVOS
// ===================================
@mixin media-breakpoint-down($name) {
  $max: map.get(v.$grid-breakpoints, $name) - 0.02;
  @media (max-width: $max) {
    @content;
  }
}

@mixin responsive-text($min, $preferred, $max) {
  font-size: clamp($min, $preferred, $max);
}

@mixin responsive-card($padding: 2rem) {
  padding: $padding;

  @include media-breakpoint-down(md) {
    padding: calc($padding * 0.75);
  }

  @include media-breakpoint-down(sm) {
    padding: calc($padding * 0.5);
  }
}

// ===================================
// MIXINS PARA TEXTOS MÁGICOS
// ===================================
@mixin magical-text($size: 2rem) {
  font-size: $size;
  color: v.$text-accent;
  text-shadow: 0 0 15px rgba(255, 215, 0, 0.4);
  font-family: v.$font-family-heading;
}

@mixin magical-glow() {
  box-shadow: 0 0 20px rgba(255, 215, 0, 0.3);
  filter: drop-shadow(0 0 10px rgba(255, 215, 0, 0.2));
}

// ===================================
// MIXINS PARA BOTÕES
// ===================================
@mixin magical-button() {
  background: v.$overlay-button;
  border: 1px solid v.$overlay-button-border;
  color: v.$text-primary;
  border-radius: v.$border-radius;
  cursor: pointer;
  position: relative;
  overflow: hidden;
  @include smooth-transition();
  @include backdrop-blur(10px);

  // Efeito de shimmer
  &::before {
    content: '';
    position: absolute;
    top: 0;
    left: -100%;
    width: 100%;
    height: 100%;
    background: linear-gradient(90deg, transparent, rgba(255, 215, 0, 0.1), transparent);
    transition: left 0.5s ease;
  }

  &:hover::before {
    left: 100%;
  }
}

@mixin button-selected() {
  background-color: var(--house-primary, v.$magic-gradient-start);
  border-color: var(--house-primary, v.$magic-gradient-start);
  color: var(--house-text-color, v.$black);
  pointer-events: none;
  transform: v.$selected-transform;
  box-shadow: 0 5px 20px rgba(255, 215, 0, 0.3);
}

// ===================================
// MIXINS PARA ELEMENTOS ESPECÍFICOS
// ===================================
@mixin option-letter-style() {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  min-width: 1.5rem;
  height: 1.5rem;
  background: rgba(255, 255, 255, 0.1);
  border: 1px solid rgba(255, 255, 255, 0.2);
  border-radius: 50%;
  font-size: 0.85rem;
  font-weight: 600;
  color: v.$text-primary;
  flex-shrink: 0;
  margin-top: 0.1rem;
}

@mixin progress-bar-style() {
  height: 100%;
  background: linear-gradient(90deg, v.$magic-gradient-start, v.$magic-gradient-middle, v.$magic-gradient-end);
  border-radius: inherit;
  transition: width 0.6s ease-in-out;
  position: relative;
  overflow: hidden;

  &::before {
    content: '';
    position: absolute;
    top: 0;
    left: -100%;
    width: 100%;
    height: 100%;
    background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.3), transparent);
    animation: progressShine 2s ease-in-out infinite;
  }
}

@keyframes progressShine {
  0% {
    left: -100%;
  }
  100% {
    left: 100%;
  }
}

// ===================================
// MIXINS PARA ACESSIBILIDADE
// ===================================
@mixin focus-visible() {
  &:focus-visible {
    outline: 2px solid v.$text-accent;
    outline-offset: 2px;
    z-index: 10;
  }
}

// ===================================
// MIXINS DE RESPONSIVIDADE (LEGADO)
// ===================================
@mixin respond-to($breakpoint) {
  @if map.has-key(v.$grid-breakpoints, $breakpoint) {
    @media (min-width: map.get(v.$grid-breakpoints, $breakpoint)) {
      @content;
    }
  } @else {
    @warn "Breakpoint `#{$breakpoint}` não encontrado em `$grid-breakpoints`.";
  }
}

@mixin respond-below($breakpoint) {
  @if map.has-key(v.$grid-breakpoints, $breakpoint) {
    @media (max-width: map.get(v.$grid-breakpoints, $breakpoint) - 1px) {
      @content;
    }
  } @else {
    @warn "Breakpoint `#{$breakpoint}` não encontrado em `$grid-breakpoints`.";
  }
}

// ===================================
// MIXINS DE LAYOUT
// ===================================
@mixin flex-center {
  display: flex;
  align-items: center;
  justify-content: center;
}

@mixin flex-between {
  display: flex;
  align-items: center;
  justify-content: space-between;
}

@mixin absolute-center {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}
