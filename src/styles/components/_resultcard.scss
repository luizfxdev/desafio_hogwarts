// src/styles/components/_resultcard.scss
@use '../abstracts/variables' as *;
@use '../abstracts/mixins' as *;
@use 'sass:map'; // Adicionado para map.get
@use 'sass:math'; // Adicionado para math.div

// ===================================
// ESTILOS DO COMPONENTE RESULT CARD
// ===================================
.result-card-container {
  max-width: $result-card-max-width;
  margin: 0 auto;
  padding: $spacer;
  position: relative;
  // Efeitos de fundo e decora√ß√£o
  .sparkles {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    pointer-events: none;
    z-index: 0;
    .sparkle {
      position: absolute;
      border-radius: 50%;
      background: map.get($sparkle-colors, gold); // Usando map.get
      opacity: 0.7;
      @for $i from 1 through 6 {
        &.sparkle-#{$i} {
          animation-delay: #{$i * 0.3}s;
        }
      }
    }
  }
}

// Card principal do resultado
// -----------------------------------
.result-card {
  @include responsive-card($spacer * 2); // Mant√©m o mixin base
  position: relative;
  z-index: 1;
  background: $white; // Fundo do card
  border-radius: $border-radius-xl;
  overflow: hidden;
  box-shadow: $box-shadow-lg; // Sombra mais pronunciada
  border: 4px solid var(--house-primary); // Borda da cor da casa
  // Nova se√ß√£o para o banner e bras√£o
  .house-identity-section {
    position: relative;
    width: 100%;
    // Altura combinada do banner e espa√ßo para o bras√£o
    min-height: $banner-height + math.div($crest-size, 2); // Usando math.div
    // AQUI EST√Å A MUDAN√áA: Usando a nova vari√°vel CSS --house-primary-darkened
    background: linear-gradient(180deg, var(--house-gradient), var(--house-primary-darkened));
    border-radius: $border-radius-xl $border-radius-xl 0 0;
    overflow: hidden;
    padding-bottom: math.div($crest-size, 2); // Usando math.div
    // Pseudo-elemento para um efeito de "moldura m√°gica"
    &::before {
      content: '';
      position: absolute;
      top: 0;
      left: 0;
      right: 0;
      bottom: 0;
      background: rgba(var(--house-primary-rgb), 0.1); // Cor da casa com transpar√™ncia
      pointer-events: none;
      z-index: 2;
    }
  }
  // Banner da casa
  .card-banner {
    width: 100%;
    height: $banner-height; // Altura do banner
    overflow: hidden;
    position: relative;
    z-index: 1; // Garante que o banner esteja abaixo do bras√£o (se sobrepor)
    border-bottom: 2px solid rgba(var(--house-primary-rgb), 0.3); // Linha sutil abaixo do banner
    .house-banner-img {
      width: 100%;
      height: 100%;
      object-fit: cover;
      object-position: center;
    }
    // Fallback se a imagem n√£o carregar
    &::after {
      content: 'üè∞';
      position: absolute;
      top: 50%;
      left: 50%;
      transform: translate(-50%, -50%);
      font-size: 3rem;
      z-index: -1;
      color: $light-gray;
    }
  }
  // Container do bras√£o
  .crest-container {
    position: absolute;
    bottom: 0; // Posiciona na parte inferior da house-identity-section
    left: 50%;
    transform: translate(-50%, 50%); // Move para baixo pela metade da sua altura, criando sobreposi√ß√£o
    z-index: 10; // Garante que o bras√£o esteja acima de tudo
    background: $white; // Fundo para o bras√£o
    border-radius: 50%;
    padding: $spacer * 0.25; // Pequeno padding para a borda
    .house-crest {
      width: $crest-size * 1.2; // Aumenta o tamanho do bras√£o
      height: $crest-size * 1.2;
      object-fit: contain;
      border-radius: 50%;
      border: 5px solid var(--house-primary); // Borda com a cor prim√°ria da casa
      box-shadow: $box-shadow-magical; // Sombra m√°gica
      background: $white; // Fundo branco para o bras√£o
      @include smooth-transition();
      &:hover {
        transform: scale(1.08) rotate(3deg);
        box-shadow: 0 10px 30px rgba(var(--house-primary-rgb), 0.4); // Sombra de hover mais intensa
      }
      @media (max-width: map.get($grid-breakpoints, sm)) {
        // Usando map.get
        width: $crest-size; // Ajusta para telas menores
        height: $crest-size;
      }
    }
  }
  // Corpo do card
  .card-body {
    padding: $spacer * 2 0 $spacer; // Adiciona padding no topo para compensar o bras√£o
    margin-top: math.div($crest-size, 2); // Usando math.div
  }
  // Estilos espec√≠ficos por casa (mantidos, mas garantindo que as vari√°veis CSS est√£o sendo usadas)
  &.house-gryffindor {
    @include house-colors('gryffindor');
  }
  &.house-slytherin {
    @include house-colors('slytherin');
  }
  &.house-ravenclaw {
    @include house-colors('ravenclaw');
  }
  &.house-hufflepuff {
    @include house-colors('hufflepuff');
  }
}

// T√≠tulos do resultado (mantidos)
// -----------------------------------
.house-title {
  font-family: $font-family-heading;
  font-size: clamp(1.5rem, 5vw, 2.5rem);
  font-weight: $font-weight-bold;
  margin-bottom: $spacer;
  @include magical-text();
}

.house-name {
  font-family: $font-family-magical;
  font-size: clamp(1.25rem, 4vw, 1.75rem);
  margin-bottom: $spacer * 1.5;
  strong {
    font-size: clamp(1.5rem, 5vw, 2.25rem);
    display: block;
    margin-top: $spacer * 0.5;
  }
}

// Cores espec√≠ficas para cada casa nos textos
.text-gryffindor {
  @include house-text('gryffindor');
}

.text-slytherin {
  @include house-text('slytherin');
}

.text-ravenclaw {
  @include house-text('ravenclaw');
}

.text-hufflepuff {
  @include house-text('hufflepuff');
}

// Descri√ß√£o da casa (mantida)
// -----------------------------------
.house-description {
  font-size: $font-size-lg;
  line-height: 1.6;
  color: $dark-gray;
  font-style: italic;
  border-left: 3px solid $warning;
  padding-left: $spacer;
  margin: $spacer * 1.5 0;
}

// Caracter√≠sticas da casa (mantidas)
// -----------------------------------
.house-traits {
  .traits-list {
    @include flex-center();
    flex-wrap: wrap;
    gap: $spacer * 0.5;
    .badge {
      font-size: $font-size-sm;
      font-weight: $font-weight-medium;
      padding: $spacer * 0.5 $spacer;
      border-radius: $border-radius-lg;
      @include smooth-transition();
      &:hover {
        transform: translateY(-2px);
        box-shadow: $box-shadow;
      }
      // Badges espec√≠ficos por casa
      &.bg-gryffindor {
        @include house-background('gryffindor');
        color: $white;
      }
      &.bg-slytherin {
        @include house-background('slytherin');
        color: $white;
      }
      &.bg-ravenclaw {
        @include house-background('ravenclaw');
        color: $white;
      }
      &.bg-hufflepuff {
        @include house-background('hufflepuff');
        color: $white;
      }
    }
  }
}

// Informa√ß√µes da casa (mantidas)
// -----------------------------------
.house-info {
  background: rgba($light-gray, 0.5);
  border-radius: $border-radius-lg;
  padding: $spacer * 1.5;
  .row > div {
    @media (max-width: map.get($grid-breakpoints, md)) {
      // Usando map.get
      text-align: center;
    }
  }
  strong {
    color: $dark-gray;
    font-weight: $font-weight-semibold;
  }
}

// Pontua√ß√£o detalhada (mantida)
// -----------------------------------
.scores-breakdown {
  background: $light-gray;
  border-radius: $border-radius-lg;
  padding: $spacer * 1.5;
  h6 {
    color: $dark-gray;
    font-weight: $font-weight-semibold;
    margin-bottom: $spacer;
  }
  .score-item {
    text-align: center;
    padding: $spacer * 0.5;
    border-radius: $border-radius;
    background: $white;
    @include smooth-transition();
    &:hover {
      transform: translateY(-2px);
      box-shadow: $box-shadow;
    }
    &.winner {
      background: linear-gradient(135deg, $warning, lighten($warning, 10%));
      color: $white;
      box-shadow: $box-shadow-magical;
      .score-house {
        color: $white !important;
        font-weight: $font-weight-bold;
      }
    }
    .score-house {
      font-size: $font-size-sm;
      font-weight: $font-weight-medium;
      margin-bottom: $spacer * 0.25;
    }
    .score-points {
      font-size: $font-size-lg;
      font-weight: $font-weight-semibold;
    }
  }
}

// Bot√£o de reiniciar (mantido)
// -----------------------------------
.restart-btn {
  font-size: $font-size-lg;
  font-weight: $font-weight-medium;
  padding: $spacer * 0.75 $spacer * 2;
  border-radius: $border-radius-lg;
  border: 2px solid $info;
  @include smooth-transition();
  &:hover {
    background: $info;
    border-color: $info;
    color: $white;
    transform: translateY(-2px);
    box-shadow: $box-shadow-lg;
  }
  &:active {
    transform: translateY(0);
  }
  i {
    @include smooth-transition(transform);
  }
  &:hover i {
    transform: rotate(180deg);
  }
}

// Anima√ß√µes espec√≠ficas do resultado (mantidas)
// -----------------------------------
@keyframes resultFadeIn {
  from {
    opacity: 0;
    transform: scale(0.8) rotateY(-90deg);
  }
  to {
    opacity: 1;
    transform: scale(1) rotateY(0deg);
  }
}

@keyframes celebrationPulse {
  0%,
  100% {
    transform: scale(1);
  }
  50% {
    transform: scale(1.05);
  }
}

// Responsividade (ajustada para a nova estrutura)
// -----------------------------------
@media (max-width: map.get($grid-breakpoints, sm)) {
  // Usando map.get
  .result-card {
    margin: $spacer * 0.5;
    .house-identity-section {
      min-height: $banner-height * 0.7 + math.div($crest-size * 0.8, 2); // Usando math.div
      padding-bottom: math.div($crest-size * 0.8, 2); // Usando math.div
    }
    .card-banner {
      height: $banner-height * 0.7; // Reduz a altura do banner em telas menores
    }
    .crest-container {
      transform: translate(-50%, 50%); // Mant√©m a sobreposi√ß√£o
    }
    .card-body {
      padding: $spacer * 1.5 0 $spacer; // Ajusta padding
      margin-top: math.div($crest-size * 0.8, 2); // Usando math.div
    }
    .house-description {
      font-size: $font-size-base;
    }
    .house-info,
    .scores-breakdown {
      padding: $spacer;
    }
    .restart-btn {
      font-size: $font-size-base;
      padding: $spacer * 0.5 $spacer * 1.5;
    }
  }
}
